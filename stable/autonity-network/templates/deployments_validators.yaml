{{- $imageAutonity := .Values.imageAutonity -}}
{{- $imageAutonity_init := .Values.imageAutonity_init -}}
{{- $imageNginx := .Values.image_nginx -}}
{{- $imageTelegraf := .Values.image_telegraf -}}
{{- $zones := .Values.zones -}}
{{- $zoneCount := len $zones -}}
{{- $namespace := .Release.Namespace -}}
{{- $releasename := .Release.Name -}}

{{- $networkid :=  .Values.networkid -}}

{{- $ethstatsEnabled := .Values.global.ethstats.enabled -}}
{{- $rpcHttpBasicAuthEnabled := .Values.rpc_http_basic_auth_enabled -}}
{{- $rpcHttpsEnabled := .Values.rpc_https_enabled -}}
{{- $awsPersistentStorageEnabled := .Values.aws_persistent_storage_enabled -}}
{{- $gcpPersistentStorageEnabled := .Values.gcp_persistent_storage_enabled -}}
{{- $telegraf := .Values.telegraf -}}
{{- $selectorMethod := .Values.selector_method -}}

{{ range $i, $e := until (atoi (toString .Values.validators.num)) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: validator-{{ $i }}
  namespace: {{ $namespace }}
spec:
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: validator-{{ $i }}
    spec:
      tolerations:
      - key: "role"
        operator: "Equal"
        value: "validators"
        effect: "NoSchedule"
      {{- if eq $selectorMethod "zones" }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: pool
                operator: In
                values:
                - validators-{{ div $i $zoneCount }}
              - key: failure-domain.beta.kubernetes.io/zone
                operator: In
                values:
                  {{- $zoneNum := mod $i $zoneCount }}
                  - {{ index $zones $zoneNum  }}
      {{ end }}
      {{- if eq $selectorMethod "app" }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: app
                operator: In
                values:
                - validator-{{ $i }}
      {{ end }}
      initContainers:
      - name: init
        image: {{ $imageAutonity_init.repository }}:{{ $imageAutonity_init.tag }}
        volumeMounts:
        - name: blockchain
          mountPath: /autonity/blockchain
        - name: keys
          mountPath: /autonity/keys
        - name: cm-genesis
          mountPath: /autonity/cm-genesis
        - name: sec-account-pwd
          mountPath: /autonity/sec-account-pwd
        - name: sec-peers
          mountPath: /autonity/sec-peers
        args:
          - "--debug"
          - "true"
      containers:
      - name: autonity
        image: {{ $imageAutonity.repository }}:{{ $imageAutonity.tag }}
        ports:
        - containerPort: 30303
          name: p2p
        args:
          - "--datadir"
          - "/autonity/blockchain"
          - "--keystore"
          - "/autonity/keys/keystore"
          - "--nodekey"
          - "/autonity/sec-peers/private_key"
          - "--gcmode"
          - "archive"
          - "--syncmode"
          - "full"
          - "--cache"
          - "1024"
          - "--rpc"
          - "--rpcapi"
          - "eth,web3,net,tendermint,txpool,debug"
          - "--rpcvhosts"
          - "*"
          - "--ws"
          - "--wsapi"
          - "eth,web3,net"
          - "--wsorigins"
          - "*"
          - "--metrics"
          - "--pprof"
          - "--pprofaddr"
          - "0.0.0.0"
          - "--networkid"
          - "{{ $networkid }}"
          - "--mine"
          - "--minerthreads"
          - "1"
          - "--debug"
          - "--verbosity"
          - "4"
{{ if $ethstatsEnabled }}
          - "--ethstats"
          - "validator-{{ $i }}:$(ETHSTATS_SECRET)@ethstats.{{ $namespace }}"
        env:
        - name: ETHSTATS_SECRET
          valueFrom:
            secretKeyRef:
              name: ethstats
              key: WS_SECRET
{{ end }}
        volumeMounts:
        - name: blockchain
          mountPath: /autonity/blockchain
        - name: keys
          mountPath: /autonity/keys
        - name: sec-peers
          mountPath: /autonity/sec-peers
      - name: nginx
        image: {{ $imageNginx.repository }}:{{ $imageNginx.tag }}
        ports:
        - containerPort: 8080
          name: https-rpc
        volumeMounts:
        - name: nginx-proxy-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
{{ if $rpcHttpBasicAuthEnabled }}
        - name: nginx-proxy-config
          mountPath: /etc/nginx/htpasswd
          subPath: htpasswd
{{ end }}
{{ if $rpcHttpsEnabled }}
        - name: nginx-proxy-ssl
          mountPath: /etc/nginx/ssl
{{ end }}
{{ if $telegraf }}
      - name: telegraf
        image: {{ $imageTelegraf.repository }}:{{ $imageTelegraf.tag }}
        env:
        - name: NETWORKID
          value: "{{ $networkid }}"
        - name: CLIENT_NAME
          value: "validator-{{ $i }}"
        volumeMounts:
        - name: telegraf-conf
          mountPath: /etc/telegraf/telegraf.conf
          subPath: conf
{{ end }}
      volumes:
        - name: blockchain
{{ if or (eq $awsPersistentStorageEnabled true) (eq $gcpPersistentStorageEnabled true)}}
          persistentVolumeClaim:
            claimName: {{ $releasename }}-validator-{{ $i }}-blockchain
{{ else }}
          emptyDir: {}
{{ end}}
        - name: keys
          emptyDir:
            medium: Memory
            sizeLimit: "1M"
        - name: cm-genesis
          configMap:
            name: genesis
        - name: sec-account-pwd
          secret:
            secretName: account-pwd
        - name: sec-peers
          secret:
            secretName: validators
            items:
              - key: {{ $i }}.private_key
                path: private_key
{{ if $telegraf }}
        - name: telegraf-conf
          configMap:
            name: telegraf-conf
{{ end }}
        - name: nginx-proxy-config
          configMap:
            name: nginx-conf
            
{{ if $rpcHttpsEnabled }}
        - name: nginx-proxy-ssl
          secret:
            secretName: autonity-https
{{ end }}
{{- end}}
